.. _php-connection-options:

==========================
Specify Connection Options
==========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: connection string, URI, server, Atlas, settings, configure

.. toctree::

   Stable API </connect/connection-options/stable-api>
   Compress Network Traffic </connect/connection-options/network-compression>

Overview
--------

This page describes the MongoDB connection and authentication options
available in the {+driver-short+}.

Set Connection Options
----------------------

You can configure your connection by specifying options in the connection URI or by
passing them to the ``MongoDB\Client`` constructor.

.. _php-connection-uri:

Using the Connection URI
~~~~~~~~~~~~~~~~~~~~~~~~

If you pass a connection URI to the ``MongoDB\Client`` constructor, you can include
connection options in the URI as ``<name>=<value>`` pairs. In the following example,
the connection URI sets the ``tls`` option to ``true`` and the
``tlsCertificateKeyFile`` option to ``/path/to/file.pem``:

.. literalinclude:: /includes/connect/connection-options.php
   :language: php
   :copyable: true
   :start-after: // start-connection-uri
   :end-before: // end-connection-uri
   :emphasize-lines: 2,5

.. _php-client-object:

Using a MongoDB\\Client Object
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can pass connection options to the ``MongoDB\Client`` constructor
instead of including them in your connection URI.

The following example shows how to use the ``$uriOptions`` parameter of the
``MongoDB\Client`` constructor to set connection options:

.. literalinclude:: /includes/connect/connection-options.php
   :language: php
   :copyable: true
   :start-after: // start-client-options 
   :end-before: // end-client-options
   :emphasize-lines: 6-9, 12

.. note::
   
   If you specify an option in both the ``$uriOptions`` parameter and in the connection
   URI, the value in ``$uriOptions`` takes precedence.

Connection URI Options
----------------------

The following sections describe the options that you can set for your connection to
MongoDB. Each connection option links to its corresponding
entry in the {+mdb-server+} manual.

.. important:: Percent-Encoding

   If the value of a connection option contains special characters, you must
   :wikipedia:`percent-encode <Percent-encoding>` the value before including it
   in the connection URI. You can use the ``rawurlencode()`` method to encode 
   these values according to the URI syntax specified in RFC 3986.

   Don't percent-encode connection options when including them in the
   ``$uriOptions`` parameter.

   To learn more, see the following resources:

   - `RFC 3986 <http://www.faqs.org/rfcs/rfc3986.html>`__
   - :php:`rawurlencode <rawurlencode>` in the PHP manual

Replica Set Options
~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1

   * - Connection Option
     - Description

   * - :manual:`directConnection </reference/connection-string-options/#mongodb-urioption-urioption.directConnection>`
     - | **Data Type**: {+bool-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['directConnection' => true];``
       | **Connection URI Example**: ``directConnection=true``
   
   * - :manual:`replicaSet </reference/connection-string-options/#mongodb-urioption-urioption.replicaSet>`
     - | **Data Type**: {+string-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['replicaSet' => 'replicaSetName'];``
       | **Connection URI Example**: ``replicaSet=replicaSetName``
   
Connection Options
~~~~~~~~~~~~~~~~~~

TLS Options
```````````
To learn about the TLS options available in the {+driver-short+}, see the
:ref:`TLS <php-tls>` page.

Timeout Options
```````````````

.. list-table::
   :header-rows: 1
   :stub-columns: 1

   * - Connection Option
     - Description

   * - :manual:`connectTimeoutMS </reference/connection-string-options/#mongodb-urioption-urioption.connecttimeoutms>`
     - | **Data Type**: {+int-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['connectTimeoutMS' => 2000];``
       | **Connection URI Example**: ``connectTimeoutMS=2000``

   * - :manual:`socketTimeoutMS </reference/connection-string-options/#mongodb-urioption-urioption.sockettimeoutms>`
     - | **Data Type**: {+int-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['socketTimeoutMS' => 20000];``
       | **Connection URI Example**: ``socketTimeoutMS=20000``

.. _php-compression-options:

Compression Options
```````````````````

.. list-table::
   :header-rows: 1
   :stub-columns: 1

   * - Connection Option
     - Description

   * - :manual:`compressors </reference/connection-string-options/#mongodb-urioption-urioption.compressors>`
     - | **Data Type**: {+string-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['compressors' => 'snappy,zstd,zlib'];``
       | **Connection URI Example**: ``compressors=snappy,zstd,zlib``

   * - :manual:`zlibCompressionLevel </reference/connection-string-options/#mongodb-urioption-urioption.zlibcompressionlevel>`
     - | **Data Type**: {+int-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['zlibCompressionLevel' => 3];``
       | **Connection URI Example**: ``zlibCompressionLevel=3``

Write Concern Options
~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1

   * - Connection Option
     - Description
   
   * - :manual:`w </reference/connection-string-options/#mongodb-urioption-urioption.w>` 
     - | **Data Type**: {+string-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['w' => 'majority'];``
       | **Connection URI Example**: ``w=majority``

   * - :manual:`wTimeoutMS </reference/connection-string-options/#mongodb-urioption-urioption.wtimeoutms>`
     - | **Data Type**: {+int-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['wTimeoutMS' => 10000];``
       | **Connection URI Example**: ``wTimeoutMS=10000``

   * - :manual:`journal </reference/connection-string-options/#mongodb-urioption-urioption.journal>` 
     - | **Data Type**: {+bool-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['journal' => true];``
       | **Connection URI Example**: ``journal=true``

Read Concern Options
~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1

   * - Connection Option
     - Description
   
   * - :manual:`readConcernLevel </reference/connection-string-options/#mongodb-urioption-urioption.readconcernlevel>`
     - | **Data Type**: {+string-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['readConcernLevel' => 'majority'];``
       | **Connection URI Example**: ``readConcernLevel=majority``

Read Preference Options
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 22 78

   * - Connection Option
     - Description
   
   * - :manual:`readPreference </reference/connection-string-options/#mongodb-urioption-urioption.readpreference>`
     - | **Data Type**: :php:`MongoDB\Driver\ReadPreference <mongodb-driver-readpreference>`
       | **MongoDB\\Client Example**: ``$uriOptions = ['readPreference' => 'secondaryPreferred'];``
       | **Connection URI Example**: ``readPreference=secondaryPreferred``
   
   * - :manual:`maxStalenessSeconds </reference/connection-string-options/#mongodb-urioption-urioption.maxstalenessseconds>`
     - | **Data Type**: {+int-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['maxStalenessSeconds' => 30];``
       | **Connection URI Example**: ``maxStalenessSeconds=30``

   * - :manual:`readPreferenceTags </reference/connection-string-options/#mongodb-urioption-urioption.readpreferencetags>`
     - | **Data Type**: ``array``
       | **MongoDB\\Client Example**:
       
       .. code-block:: php

          $uriOptions = [
              'readPreferenceTags' => [
                  ['dc' => 'ny', 'rack' => 'r1'],
                  [],
              ],
          ];
        
       **Connection URI Example**: ``readPreferenceTags=dc:ny,rack:r1&readPreferenceTags=``

Authentication Options
~~~~~~~~~~~~~~~~~~~~~~

To learn about the authentication options available in the {+driver-short+}, see
:ref:`Authentication Mechanisms. <php-auth>`

.. _php-selection-discovery-options:

Server Selection and Discovery Options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 30 70

   * - Connection Option
     - Description
   
   * - :manual:`localThresholdMS </reference/connection-string-options/#mongodb-urioption-urioption.localthresholdms>`
     - | **Data Type**: {+int-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['localThresholdMS' => 20];``
       | **Connection URI Example**: ``localThresholdMS=20``

   * - :manual:`serverSelectionTimeoutMS </reference/connection-string-options/#mongodb-urioption-urioption.serverselectiontimeoutms>`
     - | **Data Type**: {+int-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['serverSelectionTimeoutMS' => 5000];``
       | **Connection URI Example**: ``serverSelectionTimeoutMS=5000``

   * - :manual:`serverSelectionTryOnce </reference/connection-string-options/#mongodb-urioption-urioption.serverselectiontryonce>`
     - | **Data Type**: {+bool-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['serverSelectionTryOnce' => false];``
       | **Connection URI Example**: ``serverSelectionTryOnce=false``

   * - :manual:`heartbeatFrequencyMS </reference/connection-string-options/#mongodb-urioption-urioption.heartbeatfrequencyms>`
     - | **Data Type**: {+int-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['heartbeatFrequencyMS' => 30000];``
       | **Connection URI Example**: ``heartbeatFrequencyMS=30000``

   * - :manual:`socketCheckIntervalMS </reference/connection-string-options/#mongodb-urioption-urioption.socketcheckintervalms>`
     - | **Data Type**: {+int-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['socketCheckIntervalMS' => 4000];``
       | **Connection URI Example**: ``socketCheckIntervalMS=4000``

Miscellaneous Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1

   * - Connection Option
     - Description
   
   * - :manual:`appName </reference/connection-string-options/#mongodb-urioption-urioption.appname>`
     - | **Data Type**: {+string-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['appName' => 'myApp'];``
       | **Connection URI Example**: ``appName=myApp``

   * - :manual:`retryReads </reference/connection-string-options/#mongodb-urioption-urioption.retryreads>`
     - | **Data Type**: {+bool-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['retryReads' => false];``
       | **Connection URI Example**: ``retryReads=false``

   * - :manual:`retryWrites </reference/connection-string-options/#mongodb-urioption-urioption.retrywrites>`
     - | **Data Type**: {+bool-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['retryWrites' => false];``
       | **Connection URI Example**: ``retryWrites=false``
   
   * - :manual:`loadBalanced </reference/connection-string-options/#mongodb-urioption-urioption.loadbalanced>`
     - | **Data Type**: {+bool-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['loadBalanced' => true];``
       | **Connection URI Example**: ``loadBalanced=true``

   * - :manual:`srvMaxHosts </reference/connection-string-options/#mongodb-urioption-urioption.srvmaxhosts>`
     - | **Data Type**: {+int-data-type+}
       | **MongoDB\\Client Example**: ``$uriOptions = ['srvMaxHosts' => 5];``
       | **Connection URI Example**: ``srvMaxHosts=5``

Troubleshooting
---------------

This section addresses issues related to MongoDB connection options.

Server Selection Errors
~~~~~~~~~~~~~~~~~~~~~~~

The following code shows possible server selection error
messages that your application might generate: 

.. code-block:: none
   :copyable: false

   No suitable servers found (`serverSelectionTryOnce` set):
     [connection refused calling hello on 'a.example.com:27017']
     [connection refused calling hello on 'b.example.com:27017']

   No suitable servers found: `serverSelectionTimeoutMS` expired:
     [socket timeout calling hello on 'example.com:27017']

   No suitable servers found: `serverSelectionTimeoutMS` expired:
     [connection timeout calling hello on 'a.example.com:27017']
     [connection timeout calling hello on 'b.example.com:27017']
     [TLS handshake failed: -9806 calling hello on 'c.example.com:27017']

   No suitable servers found: `serverselectiontimeoutms` timed out:
    [TLS handshake failed: certificate verify failed (64): IP address mismatch calling hello on 'a.example.com:27017']
    [TLS handshake failed: certificate verify failed (64): IP address mismatch calling hello on 'b.example.com:27017']

The {+extension-short+} usually represents these errors as
:php:`MongoDB\Driver\Exception\ConnectionTimeoutException <mongodb-driver-exception-connectiontimeoutexception>`
exceptions. However, the exception messages originate from
``libmongoc``, which is the underlying system library used by the extension. Since
these messages can take many forms, we recommend breaking down the structure of
the message so you can better diagnose errors in your application.

Messages typically start with "No suitable servers found". The next part of
the message indicates *how* server selection failed. The extension
avoids a server selection loop and makes a single attempt by default, according to
the ``serverSelectionTryOnce`` connection string option. If the extension is
configured to use a loop, a message that includes the phrase "serverSelectionTimeoutMS expired"
indicates that you exhausted its time limit.

The last component of the message tells us *why* server selection failed and
includes one or more errors directly from the topology scanner, which is the
service responsible for connecting to and monitoring each host. Any host that
previously experienced an error during monitoring will be included in this list. These
messages typically originate from low-level socket or TLS functions.

The following list describes the possible meanings of common phrases in the last error message
component: 

- "Connection refused": The remote host might not be not listening on
  the expected port.
- "Connection timeout": There might be a routing problem, a firewall error, or
  a timeout due to latency.
- "Socket timeout": You likely established an initial connection that
  was dropped or timed out due to latency.
- "TLS handshake failed": TLS or OCSP verification did not succeed, and you might
  have misconfigured TLS certificates.

In the case of a connection failure, you can use the ``connect`` tool for
more troubleshooting information. This tool tries to connect to each host in a
connection string by using socket functions, and then attempts to interact with
data. If you used Composer to install the library, you can use the following command
to use the ``connect`` tool:

.. code-block:: none

   php vendor/mongodb/mongodb/tools/connect.php <connection URI>

If the server you are connecting to does not accept connections, the output
resembles the following code:

.. code-block:: none

   Looking up MongoDB at <connection URI>
   Found 1 host(s) in the URI. Will attempt to connect to each.

   Could not connect to <host>:<port>: Connection refused

.. note::

   The tool supports only the ``mongodb://`` URI schema. Using the
   ``mongodb+srv`` scheme is not supported.

API Documentation
-----------------

For more information about the ``MongoDB\Client`` class, see the following {+driver-short+}
API documentation:

- :phpclass:`MongoDB\Client`

For more information about the ``MongoDB\Driver\ReadPreference`` class, see the following
{+extension-short+} API documentation:

- :php:`MongoDB\Driver\ReadPreference <mongodb-driver-readpreference>`